datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

// Define your own datamodels here and run `yarn redwood prisma migrate dev`
// to create migrations for them and apply to your dev DB.
// TODO: Please remove the following example:
model Post {
  id        Int      @id @default(autoincrement())
  title     String
  body      String
  createdAt DateTime @default(now())
}

model Contact {
  id        Int      @id @default(autoincrement())
  name      String
  email     String
  message   String
  createdAt DateTime @default(now())
}

model User {
  id                  Int       @id @default(autoincrement())
  name                String?
  email               String    @unique
  hashedPassword      String
  salt                String
  resetToken          String?
  resetTokenExpiresAt DateTime?
}

model MenuItemOrder {
  id         Int          @id @default(autoincrement())
  menuItemId Int
  order      Order        @relation(fields: [orderId], references: [id])
  orderId    Int
  menuItem   MenuItem     @relation(fields: [menuItemId], references: [id])
  price      Decimal      @db.Decimal(60, 2)
  quantity   Int
  addOns     AddOnOrder[]
}

model AddOnOrder {
  id              Int            @id @default(autoincrement())
  addOnRef        AddOn          @relation(fields: [addOnId], references: [id]) @ignore
  MenuItemOrder   MenuItemOrder? @relation(fields: [menuItemOrderId], references: [id]) @ignore
  menuItemOrderId Int?
  addOnId         Int
  price           Decimal        @db.Decimal(60, 2)
  leftSide        Boolean
  rightSide       Boolean
}

model AddOn {
  id           Int          @id @default(autoincrement())
  MenuItem     MenuItem     @relation(fields: [menuItemId], references: [id])
  menuItemId   Int
  name         String
  price        Decimal      @db.Decimal(60, 2)
  profits      Decimal      @db.Decimal(60, 2)
  type         AddOnType
  deleted      Boolean      @default(false)
  sortPosition Int          @default(autoincrement())
  AddOnOrder   AddOnOrder[]
}

model Order {
  id                    Int                @id @default(autoincrement())
  createdAt             DateTime           @default(now())
  email                 String?
  squareNonce           String?
  total                 Decimal            @db.Decimal(60, 2)
  phone                 String?
  name                  String?
  address1              String?
  address2              String?
  city                  String?
  state                 String?
  zip                   String?
  serviceMethod         ServiceMethod
  paymentMethod         PaymentMethod
  cart                  MenuItemOrder[]
  instructions          String?
  status                OrderStatus
  placedOnPOS           Boolean
  deliveryFee           Decimal            @db.Decimal(60, 2)
  tip                   Decimal            @db.Decimal(60, 2)
  driver                Int?
  creditTerminalStatus  String?
  marketingCampaignId   Int?
  marketingCampaign     MarketingCampaign? @relation(fields: [marketingCampaignId], references: [id])
  discountAmount        Decimal            @db.Decimal(60, 2)
  discount              Discount?          @relation(fields: [discountId], references: [id])
  discountId            Int?
  processedForMarketing Boolean            @default(false)
}

model MenuItem {
  id                 Int             @id @default(autoincrement())
  menuItems          MenuItemOrder[]
  discounts          Discount[]
  name               String
  price              Decimal         @db.Decimal(60, 2)
  profits            Decimal         @db.Decimal(60, 2)
  parentCategory     Category        @relation(fields: [categoryId], references: [id])
  categoryId         Int
  addOns             AddOn[]
  deleted            Boolean         @default(false)
  showQuantityPicker Boolean         @default(false)
  showOnPOS          Boolean         @default(true)
  showOnSite         Boolean         @default(true)
  HasSides           Boolean         @default(false)
}

model Discount {
  id                  Int          @id @default(autoincrement())
  orders              Order[]
  discountCode        String
  createdAt           DateTime     @default(now())
  expirationDate      DateTime?
  discountType        DiscountType
  categoryId          Int?
  category            Category?    @relation(fields: [categoryId], references: [id])
  menuItemId          Int?
  menuItem            MenuItem?    @relation(fields: [menuItemId], references: [id])
  numberValue         Int?
  orderTotalThreshold Int
  deleted             Boolean      @default(false)
}

model Category {
  id        Int        @id @default(autoincrement())
  name      String
  discounts Discount[]
  deleted   Boolean    @default(false)
  MenuItem  MenuItem[]
}

model MarketingCampaign {
  id     Int     @id @default(autoincrement())
  orders Order[]
  name   String
}

enum DiscountType {
  FIXED
  PERCENT
  MENU_ITEM
  CATEGORY
}

enum OrderStatus {
  OPEN
  CLOSED
  CANCELED
}

enum AddOnType {
  SIZE
  TOPPING
}

enum ServiceMethod {
  DELIVERY
  WALK_IN
  CARRYOUT
}

enum PaymentMethod {
  CREDIT_ONLINE
  CREDIT_TERMINAL
  CASH
  OPEN
}
